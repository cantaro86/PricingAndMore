name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: CI

jobs:
  format-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install clang-format
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format
      
      - name: Check formatting
        run: |
          clang-format -n -Werror -style=file -i src/*.{cpp,hpp} tests/*.cpp

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ninja
        run: sudo apt-get install ninja-build

      - name: Cache external dependencies
        id: cache-external
        uses: actions/cache@v3
        env:
          cache-name: cache-external
        with:
          path: ${{ github.workspace }}/.external
          key: ${{ runner.os }}-external-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-external-
      
      - name: Create external directory
        run: mkdir -p ${{github.workspace}}/.external

      - name: Configure CMake
        # if: steps.cache-external.outputs.cache-hit == 'true'
        run: cmake -B ${{github.workspace}}/build -G Ninja -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DFETCHCONTENT_BASE_DIR=${{github.workspace}}/.external
             # -DCMAKE_VERBOSE_MAKEFILE:BOOL=TRUE
      
      - name: Build
        # if: steps.cache-external.outputs.cache-hit == 'true'
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j4 

      - name: Run tests
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure
