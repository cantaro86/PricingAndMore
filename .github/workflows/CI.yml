name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  BUILD_TYPE: CI

jobs:
  format-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install clang-format
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format
      
      - name: Check formatting
        run: |
          clang-format -n -Werror -style=file -i src/*.{cpp,hpp} tests/*.cpp

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ninja
        run: sudo apt-get install ninja-build

      - name: Create external directory
        run: mkdir -p ${{ github.workspace }}/.external

      - name: Cache Catch2 installation
        id: cache-catch2
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.external/catch2
          key: ${{ runner.os }}-catch2-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-catch2-

      - name: Install Catch2
        if: steps.cache-catch2.outputs.cache-hit != 'true'
        run: |
          mkdir -p ${{ github.workspace }}/.external/catch2
          git clone https://github.com/catchorg/Catch2.git ${{ github.workspace }}/.external/catch2
          cd ${{ github.workspace }}/.external/catch2
          cmake -Bbuild -H. -DBUILD_TESTING=OFF
          cmake --build build/ --target install

      - name: Configure CMake
        run: cmake -B ${{ github.workspace }}/build -G Ninja -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_PREFIX_PATH=${{ github.workspace }}/.external/catch2
             # -DCMAKE_VERBOSE_MAKEFILE:BOOL=TRUE
      
      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }} -j4 

      - name: Run tests
        working-directory: ${{ github.workspace }}/build
        run: ctest -C ${{ env.BUILD_TYPE }} --output-on-failure
